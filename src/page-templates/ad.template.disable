import React, { Component } from "react"
import { graphql, Link } from "gatsby"
import Layout from "../components/Layout"
import { safelyGetFrontMatter } from "../cms"
import { RenderMarkdown } from "../core"
// import SEO from '../components/Seo';
import WysiwygContent from "../components/ad.richtext.formater.jsx"

// Extend this template map to allow your users to choose a page layout from the CMS
// If you're only looking for how to specify a different template per content folder, see:
// https://www.gatsbyjs.org/packages/gatsby-mdx/#installation

class AdTemplate extends Component {
  constructor(props) {
    super(props)
    this.state = {
      currentImage: 1,
      isModalactive: false,
      isContactModalActive: false
    }
  }
  handleGalleryOpen = index => {
    this.setState({ currentImage: index })
    this.setState({ isModalActive: true })
  }
  render() {
    const { ad } = this.props.data
    const { isContactModalActive } = this.state;
    const closeModal = () => this.setState({ isModalActive: false })
    if (this.props.data.ad.refModel.modelCharacteristics !== null) {
      const { data } = this.props.data.ad.refModel.modelCharacteristics
    }
    const handleNextPicture = e => {
      console.log(this.props.data.ad.images.url.length)
      this.setState({ currentImage: 0 })
      this.state.currentImage === this.props.data.ad.images.url.length - 1
        ? this.setState({ currentImage: 0 })
        : this.setState({ currentImage: this.state.currentImage + 1 })
    }
    const { json } = this.props.data.ad.childContentfulAdDescriptionRichTextNode
    const Modal = () => {
      return (
        <div
          style={{ position: "fixed", top: 0, left: 0 }}
          className={this.state.isModalActive ? "modal is-active" : "modal"}
        >
          <div
            className="modal-background"
            style={{ cursor: "zoom-out" }}
            onClick={closeModal}
          ></div>
          <div className="modal-content">
            <p className="image is-1by1">
              <img
                onClick={handleNextPicture}
                style={{ cursor: "e-resize" }}
                src={
                  "https://wanaboatimages-99dc.kxcdn.com/photos" +
                  this.props.data.ad.images.url[this.state.currentImage] +
                  "?width=800&height=800&crop=smart"
                }
                alt="coucou"
              />
            </p>
          </div>
          <button
            onClick={closeModal}
            className="modal-close is-medium"
            aria-label="close"
          ></button>
        </div>
      )
    }

    const Gallery = () => {
      const { images } = this.props.data.ad
      if (!images) {
        return null
      }
      return (
        <div>
          {images.url.map((image, index) => (
            <span
              onClick={() => this.handleGalleryOpen(index)}
              key={"gallery-item" + index}
              style={{ cursor: "zoom-in", marginRight: "10px" }}
            >
              <img
                style={{ borderRadius: "2px" }}
                src={
                  "https://wanaboatimages-99dc.kxcdn.com/photos/" +
                  image +
                  "?width=96&height=96&crop=smart"
                }
              />
            </span>
          ))}
        </div>
      )
    }

    let imageUrl = this.state.currentImage
      ? this.state.currentImage
      : ad.images.url[0]

    const ContactModal = () => {
      return (
        <div
          style={{ position: "fixed", top: 0, left: 0 }}
          id="modal" class={ (isContactModalActive) ? "modal is-active" : "modal"}>
          <div onClick={handleContactModal} class="modal-background"></div>
          <div class="modal-content">
            <div class="box">
              <article class="media">
                <div class="media-content">
                  <div class="content">
                    <p>
                      <strong>Henri Vandame</strong> <small>Gérant de Dériveurs Services</small>{" "}
                      <br />
                      Contactez-moi par téléphone du Mardi au Samedi, de 14h à 18h
                      <hr />
                      <a href="tel:+33612345678" className="tag is-primary is-large">tel:+336 12 34 56 78</a>
                    </p>
                  </div>
                </div>
              </article>
            </div>
          </div>
          <button onClick={handleContactModal} class="modal-close is-large" aria-label="close"></button>
        </div>
      )
    }
    const handleContactModal = (e) => {
      (isContactModalActive) ? this.setState({isContactModalActive: false}) : this.setState({isContactModalActive: true});
    }

    return (
      <Layout>
        <Modal />
        {/* <SEO
          title={ad.name + ' occasion à vendre'}
          description={`${ad.name} à vendre d'occasion par Dériveur Service à Dinard, le spécialiste dériveur et voile légère`}
          canonical={'https://www.wanaboat.fr/'+ad.slug}
        /> */}
        <div
          className="section"
          style={{ maxWidth: "900px", margin: "0 auto" }}
        >
          <Link to="/occasions/">← Retour à la liste</Link>
          <hr />
          <h1 className="title is-2">{ad.name}</h1>

          <div className="field is-grouped is-grouped-multiline">
            <div className="control">
              <div className="tags has-addons">
                <span className="tag is-dark">Publié le</span>
                <span className="tag is-info">{ad.publicationDate}</span>
              </div>
            </div>
            <div className="control">
              {ad.price ? (
                <div className="tags has-addons">
                  <span className="tag is-dark">Prix</span>
                  <span className="tag is-info">{ad.price}€</span>
                </div>
              ) : null}
              {ad.brand ? (
                <div className="control">
                  <div className="tags has-addons">
                    <span className="tag is-dark">Marque/Chantier</span>
                    <span className="tag is-info">{ad.brand.name}</span>
                  </div>
                </div>
              ) : null}
            </div>
          </div>

          <hr />

          <div className="columns">
            <div className="column">
              <div style={{ position: "relative" }}>
                <figure className="image is-square">
                  <img
                    style={{ borderRadius: "3px" }}
                    src={
                      "https://wanaboatimages-99dc.kxcdn.com/photos" +
                      this.props.data.ad.images.url[0] +
                      "?width=400&height=400&crop=smart"
                    }
                  />
                </figure>
                <hr />
                <Gallery />
              </div>
            </div>
            <div className="column">
              <div className="content">
                <WysiwygContent data={json} appearance={"ad"} />
                <br />
                <button
                onClick={handleContactModal}
                className="button is-primary is-medium">
                  Nous contacter pour ce bateau
                </button>
                <ContactModal />
              </div>
              <h4>Données techniques du {ad.refModel.name}</h4>
              <table className="table is-fullwidth is-bordered is-striped is-size-7">
                <tbody>
                  {ad.refModel !== undefined && ad.refModel.modelCharacteristics
                    ? ad.refModel.modelCharacteristics.data.map(
                        (item, index) => (
                          <tr key={index}>
                            <td>{item.key}</td>
                            <td>{item.value}</td>
                          </tr>
                        )
                      )
                    : null}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </Layout>
    )
  }
}

export default AdTemplate

export const pageQuery = graphql`
  query adQuery($id: String!) {
    ad: contentfulAd(id: { eq: $id }) {
      id
      contentful_id
      name
      price
      place
      slug
      publicationDate(formatString: "D/M/Y")
      date(formatString: "Y")
      images {
        url
      }
      refModel {
        slug
        name
        modelCharacteristics {
          data {
            key
            value
          }
        }
      }
      refUnivers {
        slug
        name
      }
      refBrand {
        slug
        name
      }
      childContentfulAdDescriptionRichTextNode {
        json
      }
      childContentfulAdImagesJsonNode {
        id
        internal {
          content
          description
          ignoreType
          mediaType
        }
      }
    }
  }
`
